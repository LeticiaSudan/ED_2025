ALGORITMOS ESSENCIAIS DE ORDENAÇÃO

BUBBLESORT
bubblesort -> compara pares levando o maior numero pra frente
quantas vezes fazer a varredura?(repetição do laço) -> sempre o tamanho do vetor -1
exemplo: se for um vetor de tamanho 100 então serão feitas 99 repetições do laço de ordenação(varredura) para que todos os elementos estejam ordenados

=======================================================================================================================================================================

100
99 VERIFICACOES
POSICOES VETOR 100
0 A 99 -> 100 POSIÇÕES

0 AO 98 -> 99 POSIÇOES  (POIS SEMPRE É -1)
ENTAO TENHO 100 POSIÇÕES NO VETOR, FAREI 99 VERIFICAÇÕES, O VETOR VAI DE 0 A 99, COMO É SEMPRE -1, VOU USAR DO 0 AO 98

(i = 0; i < 100; i++){                  ---> PARTE QUE REPETE O LAÇO 99 VEZES

	(j = 0; j< 100 -i-1; i++){      ---> PARTE QUE PERCORRE AS POSIÇÕES DENTRO DO VETOR, É 100-i = 99 (pois a cada verificação os números vão acertando suas  	
                                             posições no final do array, então por exemplo, quando i = 1 significa que já foi feita uma verificação e o maior número                                              já se encontra em sua posição correta no final do array, portanto, fazemos 100 - i para excluir as posições do array que                                              já estão ok) e em seguida fazemos 100 - i - 1 para adequar as posições no array (exemplo, tenho um array de 5 posições, já                                              fiz uma verificação (5 - i) = 4, só que no array seria de 0 a 3 (4 posições) por isso 4 - 1 = 3, de 0 a 3. 
					     
	}
}

====================================================================================

OBS: DEREFERENCIAR ALGO SERIA IR ATRÁS DO CONTEUDO DAQUELE CODIGO

Quando quiser redirecionar a saída de um programa para um arquivo no terminal:
programa.exe > saída.txt

Quando quiser para entrada:
programa.exe < entrada.txt